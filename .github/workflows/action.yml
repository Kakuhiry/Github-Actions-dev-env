on:
  push:
    branches:
      - master

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"

      - name: Git Identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/Kakuhiry/lerna-test
         # git fetch --depth=0 origin +refs/tags/*:refs/tags/*
        env:
          GITHUB_TOKEN: ${{ secrets.PTA }}

      - name: Login Google Cloud
        run: |
          echo $CLOUD_DATA > gcloud.json
          gcloud auth activate-service-account --key-file gcloud.json
        env:
          CLOUD_DATA: ${{ secrets.GCP_KEY_FILE }}

      - name: Authenticate with Artifact Registry
        run: |
          echo @SCOPE:registry=https://us-npm.pkg.dev/crack-linker-326904/our-registry/ > .npmrc
          echo //us-npm.pkg.dev/crack-linker-326904/our-registry/:_authToken="" >> .npmrc
          echo //us-npm.pkg.dev/crack-linker-326904/our-registry/:always-auth=true >> .npmrc

          npx google-artifactregistry-auth --repo-config .npmrc --credential-config .npmrc
          gcloud auth configure-docker us-central1-docker.pkg.dev
        # npm whoami --registry https://us-npm.pkg.dev/crack-linker-326904/our-registry/
        # env:
          # REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
          # REGISTRY_URL: ${{ secrets.REGISTRY_URL }}
          # REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
          # NPMRC: ${{ secrets.NPMRC }}
      
      # - name: commit
      #   run: |
      #     git add .
      #     git commit -m "new version commit"
      #     git push origin master

      - name: Publish to Artifact Registry (npm)
        run: |
          npx lerna publish --cd-version patch --registry https://us-npm.pkg.dev/crack-linker-326904/our-registry/ --yes

      - name: get version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with: 
          path: './package.json'
          prop_path: 'workspaces'
      - run: echo ${{ steps.version.outputs.prop }} 

      # - name: Publish to Artifact Registry (docker)
      #   run: |
      #     docker build -t us-central1-docker.pkg.dev/crack-linker-326904/quickstart-docker-repo/lerna-test:$RELEASE_VERSION .
      #     docker push us-central1-docker.pkg.dev/crack-linker-326904/quickstart-docker-repo/lerna-test:$RELEASE_VERSION