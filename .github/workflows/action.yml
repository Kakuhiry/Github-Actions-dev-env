on:
  push:
    branches:
      - master

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    strategy:
      matrix:
        apps: ["common", "server"]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      
      - name: branch
        run: echo ${GITHUB_REF##*/}

      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'npm'

      - name: install deps
        run: |
          npm install

      - name: Set up Cloud SDK
        id: gCloud-auth
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: indemnify on git
        run: |
          git config --global user.email "CI@CI.com"
          git config --global user.name "CI"

      - name: Authenticate with Artifact Registry
        run: |
          echo $NPMRC > .npmrc
          gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: get version
        id: package-version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: "./packages/${{ matrix.apps }}/package.json"
          prop_path: "version"

      - name: get route
        id: route
        run: pwd

      - name: bump major
        id: bump-major
        run: |
          lerna version major --yes
        if: ${{ contains( github.event.head_commit.message, '[major]') || contains( github.event.head_commit.message, '[Major]') }}

      - name: bump minor
        id: bump-minor
        run: |
          lerna version minor --yes
        if: ${{ contains( github.event.head_commit.message, '[minor]') || contains( github.event.head_commit.message, '[(Minor]') }}
 
      - name: bump patch
        run: |
          lerna version patch --yes
        if: steps.bump-major.outcome == 'skipped' && steps.bump-minor.outcome == 'skipped' && matrix.apps != 'common'

      - name: Publish to Bucket
        run: |
          tar -czvf ${{ matrix.apps }}-${{ steps.package-version.outputs.prop }}.tar.gz ./packages/${{ matrix.apps }}
          gsutil cp ./${{ matrix.apps }}-${{ steps.package-version.outputs.prop }}.tar.gz gs://first-testing-bucket/

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./dockerfile
          target: ${{ matrix.apps }}
          push: true
          tags: us-central1-docker.pkg.dev/crack-linker-326904/quickstart-docker-repo/${{ matrix.apps }}:${{ steps.package-version.outputs.prop }}
        

      - name: step dependency test
        run: |
          echo "THIS IS DEPENDENT"
        if: steps.package-version.outcome == 'success'
      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: ./dockerfile
      #     target: common
      #     push: true
      #     tags: us-central1-docker.pkg.dev/crack-linker-326904/quickstart-docker-repo/${{ matrix.apps }}:${{ steps.package-version.outputs.prop  }}


      # - name: Publish to Artifact Registry (docker)
      #   run: |
      #     docker build -t us-central1-docker.pkg.dev/crack-linker-326904/quickstart-docker-repo/lerna-test:$RELEASE_VERSION .
      #     docker push us-central1-docker.pkg.dev/crack-linker-326904/quickstart-docker-repo/lerna-test:$RELEASE_VERSION
