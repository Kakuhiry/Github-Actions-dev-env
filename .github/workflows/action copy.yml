on:
  push:
    branches:
      - master

jobs:
  changes:
    if: ${{ github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    outputs:
      # Expose matched filters as job 'packages' output variable
      packages: ${{ steps.filter.outputs.changes }}
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github.event.commits[0].author.name) }}
      run: echo "$GITHUB_CONTEXT"

    - name: echo ${{ github.actor }}
      run: | 
        echo ${{ github.actor == 'dependabot[bot]' }}
        echo ${{ github.actor }}

    - uses: actions/checkout@v2

    # For pull requests it's not necessary to checkout the code
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          server: packages/server/*
          common: packages/common/*

  publish:
    needs: changes
    if: ${{ needs.changes.outputs.packages != '[]' && needs.changes.outputs.packages != '' }}
    name: Publish
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     apps: ${{ fromJSON(needs.changes.outputs.packages) }}

    steps:
      # - uses: dorny/paths-filter@v2
      #   id: filter
      #   with:
      #     filters: |
      #       ${{ matrix.apps }}:
      #         - 'packages/${{ matrix.apps }}/**'


      - name: Auth on git
        run: |
          git config --global user.email "CI@CI.com"
          git config --global user.name "CI"
          
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: "0"
          ref: 'new-version'

      - name: Merge
        run: |
          echo 'a' >> txs
      
      - name: commit
        run: |
          git config --global user.name 'YA'
          git config --global user.email 'your-username@users.noreply.github.com'
          git add .
          git commit -am "Automated commit"
          git push

      # - name: Merge
      #   run: git merge origin/master

      # - name: Install dependencies
      #   run: npm install

      # - name: bump patch
      #   run: |
      #     lerna changed
      
      # - name: stash changes
      #   run: git stash
        
      # - name: bump patch
      #   run: |
      #     lerna version patch --yes

      - name: pull-request-action
        uses: vsoch/pull-request-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PULL_REQUEST_FROM_BRANCH: 'new-version'
          PULL_REQUEST_BRANCH: 'master'


      # - name: bump major
      #   id: bump-major
      #   run: |
      #     lerna version major --yes
      #   if: ${{ contains( github.event.head_commit.message, '[major]') || contains( github.event.head_commit.message, '[Major]') }}

      # - name: bump minor
      #   id: bump-minor
      #   run: |
      #     lerna version minor --yes
      #   if: ${{ contains( github.event.head_commit.message, '[minor]') || contains( github.event.head_commit.message, '[(Minor]') }}
 
      # - name: bump patch
      #   run: |
      #     lerna version patch --yes
      #   if: steps.bump-major.outcome == 'skipped' && steps.bump-minor.outcome == 'skipped' && matrix.apps != 'common'

      # - name: Publish to Bucket
      #   run: |
      #     tar -czvf ${{ matrix.apps }}-${{ steps.package-version.outputs.prop }}.tar.gz ./packages/${{ matrix.apps }}
      #     gsutil cp ./${{ matrix.apps }}-${{ steps.package-version.outputs.prop }}.tar.gz gs://first-testing-bucket/

      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: ./dockerfile
      #     target: ${{ matrix.apps }}
      #     push: true
      #     tags: us-central1-docker.pkg.dev/crack-linker-326904/quickstart-docker-repo/${{ matrix.apps }}:${{ steps.package-version.outputs.prop }}
        

      # - name: step dependency test
      #   run: |
      #     echo "THIS IS DEPENDENT"
      #   if: steps.package-version.outcome == 'success'

      # - name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: ./dockerfile
      #     target: common
      #     push: true
      #     tags: us-central1-docker.pkg.dev/crack-linker-326904/quickstart-docker-repo/${{ matrix.apps }}:${{ steps.package-version.outputs.prop  }}


      # - name: Publish to Artifact Registry (docker)
      #   run: |
      #     docker build -t us-central1-docker.pkg.dev/crack-linker-326904/quickstart-docker-repo/lerna-test:$RELEASE_VERSION .
      #     docker push us-central1-docker.pkg.dev/crack-linker-326904/quickstart-docker-repo/lerna-test:$RELEASE_VERSION
